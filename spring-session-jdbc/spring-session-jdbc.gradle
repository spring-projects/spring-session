apply plugin: 'io.spring.convention.spring-module'

description = "Spring Session and Spring JDBC integration"

dependencies {
	management platform(project(":spring-session-dependencies"))
	api project(':spring-session-core')
	api "org.springframework:spring-context"
	api "org.springframework:spring-jdbc"

	testImplementation "jakarta.servlet:jakarta.servlet-api"
	testImplementation "org.assertj:assertj-core"
	testImplementation "org.junit.jupiter:junit-jupiter-api"
	testImplementation "org.junit.jupiter:junit-jupiter-params"
	testImplementation "org.mockito:mockito-core"
	testImplementation "org.mockito:mockito-junit-jupiter"
	testImplementation "org.springframework.security:spring-security-core"
	testImplementation "org.springframework:spring-test"
	testImplementation "org.springframework:spring-web"

	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
	testRuntimeOnly "org.junit.platform:junit-platform-launcher"

	integrationTestCompile libs.ch.qos.logback.logback.core
	integrationTestCompile "com.h2database:h2"
	integrationTestCompile "com.ibm.db2:jcc"
	integrationTestCompile "com.microsoft.sqlserver:mssql-jdbc"
	integrationTestCompile "com.mysql:mysql-connector-j"
	integrationTestCompile "com.oracle.database.jdbc:ojdbc8"
	integrationTestCompile "com.zaxxer:HikariCP"
	integrationTestCompile "org.apache.derby:derby"
	integrationTestCompile "org.apache.derby:derbytools"
	integrationTestCompile "org.hsqldb:hsqldb"
	integrationTestCompile "org.mariadb.jdbc:mariadb-java-client"
	integrationTestCompile "org.postgresql:postgresql"
	integrationTestCompile "org.testcontainers:junit-jupiter"
	integrationTestCompile "org.testcontainers:db2"
	integrationTestCompile "org.testcontainers:mariadb"
	integrationTestCompile "org.testcontainers:mssqlserver"
	integrationTestCompile "org.testcontainers:mysql"
	integrationTestCompile "org.testcontainers:oracle-free"
	integrationTestCompile "org.testcontainers:postgresql"
}

integrationTest {
	maxParallelForks = 4
}
